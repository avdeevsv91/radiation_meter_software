<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="about" xml:space="preserve">
    <value>О программе</value>
  </data>
  <data name="about_title" xml:space="preserve">
    <value>О программе {0}...</value>
  </data>
  <data name="accuracy" xml:space="preserve">
    <value>Точность измерений: {0}</value>
  </data>
  <data name="autodetect" xml:space="preserve">
    <value>Автоопределение</value>
  </data>
  <data name="autostart" xml:space="preserve">
    <value>Автозагрузка</value>
  </data>
  <data name="baud_rate" xml:space="preserve">
    <value>Скорость:</value>
  </data>
  <data name="baud_rate_custom" xml:space="preserve">
    <value>Другая:</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="com_port" xml:space="preserve">
    <value>COM порт</value>
  </data>
  <data name="com_port_custom" xml:space="preserve">
    <value>Другой:</value>
  </data>
  <data name="connect" xml:space="preserve">
    <value>Подключиться</value>
  </data>
  <data name="current_value" xml:space="preserve">
    <value>Текущее значение: {0}</value>
  </data>
  <data name="data_bits" xml:space="preserve">
    <value>Биты данных:</value>
  </data>
  <data name="data_source" xml:space="preserve">
    <value>Источник данных:</value>
  </data>
  <data name="disable_exit" xml:space="preserve">
    <value>Отключить кнопку выхода</value>
  </data>
  <data name="disconnect" xml:space="preserve">
    <value>Отключиться</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Ошибка!</value>
  </data>
  <data name="general" xml:space="preserve">
    <value>Общее</value>
  </data>
  <data name="http_accuracy" xml:space="preserve">
    <value>Точность:</value>
  </data>
  <data name="http_data" xml:space="preserve">
    <value>POST данные:</value>
  </data>
  <data name="http_expressions" xml:space="preserve">
    <value>Выражения:</value>
  </data>
  <data name="http_get" xml:space="preserve">
    <value>GET</value>
  </data>
  <data name="http_interval" xml:space="preserve">
    <value>Интервал:</value>
  </data>
  <data name="http_json_help" xml:space="preserve">
    <value>Для разбора JSON данных используется выражение XPath.</value>
  </data>
  <data name="http_method" xml:space="preserve">
    <value>Метод:</value>
  </data>
  <data name="http_post" xml:space="preserve">
    <value>POST</value>
  </data>
  <data name="http_radiation" xml:space="preserve">
    <value>Радиация:</value>
  </data>
  <data name="http_regexp_help" xml:space="preserve">
    <value>Для разбора любого типа данных используется регулярное выражение.</value>
  </data>
  <data name="http_request" xml:space="preserve">
    <value>HTTP запрос</value>
  </data>
  <data name="http_response" xml:space="preserve">
    <value>Обработка ответа:</value>
  </data>
  <data name="http_unit" xml:space="preserve">
    <value>Ед.изм.:</value>
  </data>
  <data name="http_url" xml:space="preserve">
    <value>URL:</value>
  </data>
  <data name="http_useragent" xml:space="preserve">
    <value>User-Agent:</value>
  </data>
  <data name="http_voltage" xml:space="preserve">
    <value>Напряжение:</value>
  </data>
  <data name="http_xml_help" xml:space="preserve">
    <value>Для разбора XML данных используется выражение XPath.</value>
  </data>
  <data name="information" xml:space="preserve">
    <value>Информация</value>
  </data>
  <data name="language" xml:space="preserve">
    <value>Язык интерфейса:</value>
  </data>
  <data name="language_title" xml:space="preserve">
    <value>Русский</value>
  </data>
  <data name="levels" xml:space="preserve">
    <value>Допуски</value>
  </data>
  <data name="lvl_danger" xml:space="preserve">
    <value>Опасный уровень:</value>
  </data>
  <data name="lvl_warning" xml:space="preserve">
    <value>Повышенный уровень:</value>
  </data>
  <data name="max_data" xml:space="preserve">
    <value>Размер буфера данных:</value>
  </data>
  <data name="min_accuracy" xml:space="preserve">
    <value>Минимальная точность данных:</value>
  </data>
  <data name="nitify_tray" xml:space="preserve">
    <value>Всплывающие сообщения</value>
  </data>
  <data name="notifications" xml:space="preserve">
    <value>Уведомления</value>
  </data>
  <data name="notify_voice" xml:space="preserve">
    <value>Голосовые оповещения</value>
  </data>
  <data name="not_available" xml:space="preserve">
    <value>Н/Д</value>
  </data>
  <data name="no_data" xml:space="preserve">
    <value>Недостаточно данных</value>
  </data>
  <data name="ok" xml:space="preserve">
    <value>ОК</value>
  </data>
  <data name="parity" xml:space="preserve">
    <value>Четность:</value>
  </data>
  <data name="parity_even" xml:space="preserve">
    <value>Четный</value>
  </data>
  <data name="parity_mark" xml:space="preserve">
    <value>Маркер</value>
  </data>
  <data name="parity_none" xml:space="preserve">
    <value>Нет</value>
  </data>
  <data name="parity_odd" xml:space="preserve">
    <value>Нечетный</value>
  </data>
  <data name="parity_space" xml:space="preserve">
    <value>Пробел</value>
  </data>
  <data name="radiation_level" xml:space="preserve">
    <value>Радиационный фон:</value>
  </data>
  <data name="run_connected" xml:space="preserve">
    <value>Подключаться автоматически</value>
  </data>
  <data name="run_maximized" xml:space="preserve">
    <value>В развернутом виде</value>
  </data>
  <data name="run_minimized" xml:space="preserve">
    <value>В свернутом виде</value>
  </data>
  <data name="run_windows" xml:space="preserve">
    <value>Запускать вместе с Windows</value>
  </data>
  <data name="select_com_port" xml:space="preserve">
    <value>Выберите порт:</value>
  </data>
  <data name="settings" xml:space="preserve">
    <value>Настройки</value>
  </data>
  <data name="stop_bits" xml:space="preserve">
    <value>Стоповые биты:</value>
  </data>
  <data name="tray_danger" xml:space="preserve">
    <value>Опасный уровень радиации!</value>
  </data>
  <data name="tray_minimize" xml:space="preserve">
    <value>Сворачивать в системный трей</value>
  </data>
  <data name="tray_normal" xml:space="preserve">
    <value>Уровень радиации в норме!</value>
  </data>
  <data name="tray_warning" xml:space="preserve">
    <value>Повышенный уровень радиации!</value>
  </data>
  <data name="version_info" xml:space="preserve">
    <value>Версия {0}</value>
  </data>
</root>